keyboard_keypressed:3:int keyboard_keypressed(int scancode)
isblank:3:int isblank (int c)
floor:3:double floor(double x)
crypt:3:char *crypt(const char *key, const char *salt)
gl_clearscreen:3:void gl_clearscreen(int c)
acct:2:int acct(const char *filename)
towctrans:3:wint_t towctrans (wint_t wc, wctrans_t desc)
iconv_close:3:int iconv_close (iconv_t cd)
sscanf:3:int sscanf( const char *str, const char *format, ...)
isprint:3:int isprint (int c)
seteuid:2:int seteuid(uid_t euid)
initgroups:3:int initgroups(const char *user, gid_t group)
setnetent:3:void setnetent(int stayopen)
db_mpool:3:db_lock(3), db_log(3), db_mpool(3), db_open(3), db_thread(3)
gl_freecontext:3:void gl_freecontext(GraphicsContext *gc)
SDL_QuitSubSystem:3:void SDL_QuitSubSystem(Uint32 flags)
acos:3:double acos(double x)
va_arg:3:type va_arg( va_list ap, type)
infnan:3:double infnan(int error)
sleep:3:unsigned int sleep(unsigned int seconds)
SDL_GetCursor:3:SDL_Cursor *SDL_GetCursor(void)
print_objid:3:void print_objid( oid *objid, int objidlen)
atexit:3:int atexit(void (*function)(void))
lchown:2:int lchown(const char *path, uid_t owner, gid_t group)
getchar:3:int getchar(void)
vga_claimvideomemory:3:int vga_claimvideomemory(int m)
fgetpwent:3:struct passwd *fgetpwent(FILE *stream)
chown:2:int chown(const char *path, uid_t owner, gid_t group)
fegetexceptflag:3:void fegetexceptflag(fexcept_t *flagp, int excepts)
getpgid:2:pid_t getpgid(pid_t pid)
scanf:3:int scanf( const char *format, ...)
jrand48:3:long int jrand48(unsigned short int xsubi[3])
fts_close:3:fts_close(FTS *ftsp)
index:3:char *index(const char *s, int c)
SDL_NumJoysticks:3:int SDL_NumJoysticks(void)
SDL_GetGamma:3:int SDL_GetGamma(float *red, float *green, float *blue)
encrypt:3:void encrypt(char block[64], int edflag)
getdtablesize:2:int getdtablesize(void)
gl_setscreenoffset:3:void gl_setscreenoffset(int o)
asinh:3:double asinh(double x)
stpncpy:3:char *stpncpy (char *dest, const char *src, size_t n)
clnt_call:3:clnt_call(clnt, procnum, inproc, in, outproc, out, tout)
SDL_EnableUNICODE:3:int SDL_EnableUNICODE(int enable)
getc:3:int fgetc(FILE *stream)
gl_copyscreen:3:void gl_copyscreen(GraphicsContext *gc)
sigsetmask:2:int sigsetmask(int mask)
gets:3:char *fgets(char *s, int size, FILE *stream)
getuid:2:uid_t getuid(void)
hosts_access:3:int hosts_access(request)
svcerr_weakauth:3:svcerr_weakauth(xprt)
iscntrl:3:int iscntrl (int c)
SDL_Quit:3:void SDL_Quit(void)
strcoll:3:int strcoll(const char *s1, const char *s2)
fork:2:pid_t fork(void)
pmap_rmtcall:3:pmap_rmtcall(addr, prognum, versnum, procnum, inproc, in, outproc, out, tout, portp)
strerror:3:char *strerror(int errnum)
free:3:void free(void *ptr)
utime:2:int utime(const char *filename, struct utimbuf *buf)
getresgid:2:int getresgid(gid_t *rgid, gid_t *egid, gid_t *sgid)
erfc:3:double erfc (double x)
stime:2:int stime(time_t *t)
mouse_waitforupdate:3:void mouse_waitforupdate(void)
svc_getreq:3:svc_getreq(rdfds)
__setfpucw:3:void __setfpucw((unsigned short) control_word)
wmemchr:3:wchar_t *wmemchr (const wchar_t *s, wchar_t c, size_t n)
addmntent:3:int addmntent(FILE *filep, const struct mntent *mnt)
srand:3:void srand(unsigned int seed)
iswdigit:3:int iswdigit (wint_t wc)
gl_setclippingwindow:3:void gl_setclippingwindow(int x1, int y1, int x2, int y2)
getgrgid:3:struct group *getgrgid(gid_t gid)
SDL_LockAudio:3:void SDL_LockAudio(void)
clnt_perrno:3:tine clnt_perrno()
ctermid:3:char *ctermid(char *s)
modify_ldt:2:int modify_ldt(int func, void *ptr, unsigned long bytecount)
gl_fillcircle:3:void gl_fillcircle(int x, int y, int r, int c)
gl_trisetcolorlookup:3:void gl_trisetcolorlookup(int i, long color)
rand:3:int rand(void)
strstr:3:char *strstr(const char *haystack, const char *needle)
gl_setpixel:3:void gl_setpixel(int x, int y, int c)
gl_putboxmask:3:void gl_putboxmask(int x, int y, int w, int h, void *dp)
SDL_FreeSurface:3:void SDL_FreeSurface(SDL_Surface *surface)
setpgrp:2:int setpgrp(void)
init_mib:3:void init_mib( void )
SDL_JoystickNumHats:3:int SDL_JoystickNumHats(SDL_Joystick *joystick)
sendmsg:2:int sendmsg(int s, const struct msghdr *msg, int flags)
fdatasync:2:int fdatasync(int fd)
wcsncmp:3:int wcsncmp (const wchar_t *s1, const wchar_t *s2, size_t n)
vfscanf:3:int vfscanf( FILE *stream, const char *format, va_list ap)
nrand48:3:long int nrand48(unsigned short int xsubi[3])
snmp_free_pdu:3:void snmp_free_pdu ( struct snmp_pdu *pdu )
lrand48:3:long int lrand48(void)
setbuf:3:void setbuf(FILE *stream, char *buf)
htons:3:unsigned short int htons(unsigned short int hostshort)
mouse_gety:3:int mouse_gety(void)
shmget:2:int shmget(key_t key, int size, int shmflg)
exp:3:double exp(double x)
vga_setdisplaystart:3:void vga_setdisplaystart(int a)
sigfillset:3:int sigfillset(sigset_t *set)
SDL_CDStop:3:int SDL_CDStop(SDL_CD *cdrom)
clntraw_create:3:when     a     clnt_create(),     clntraw_create()
realpath:3:char *realpath(const char *path, char *resolved_path)
ftruncate:2:int ftruncate(int fd, off_t length)
gl_allocatecontext:3:GraphicsContext *gl_allocatecontext(void)
read_all_mibs:3:struct tree *read_all_mibs( void )
mlockall:2:int mlockall(int flags)
SDL_CreateSemaphore:3:SDL_sem *SDL_CreateSemaphore(Uint32 initial_value)
localtime:3:struct tm *localtime(const time_t *timep)
vfwprintf:3:int vfwprintf (FILE* stream, const wchar_t* format, va_list args)
vga_getydim:3:int vga_getydim(void)
umask:2:mode_t umask(mode_t mask)
SDL_JoystickUpdate:3:void SDL_JoystickUpdate(void)
vsprintf:3:int vsprintf(char *str, const char *format, va_list ap)
sigmask:2:int sigmask(int signum)
setfsuid:2:int setfsuid(uid_t fsuid)
mouse_getbutton:3:int mouse_getbutton(void)
swapon:2:int swapon(const char *path, int swapflags)
wcsncpy:3:wchar_t *wcsncpy (wchar_t *dest, const wchar_t *src, size_t n)
clock:3:clock_t clock(void)
SDL_WM_GetCaption:3:void SDL_WM_GetCaption(char **title, char **icon)
fetestexcept:3:int fetestexcept(int exceps)
sigismember:3:int sigismember(const sigset_t *set, int signum)
tcgetpgrp:3:pid_t tcgetpgrp ( int fd )
fileno:3:int fileno( FILE *stream)
fabs:3:double fabs(double x)
ustat:2:int ustat(dev_t dev, struct ustat * ubuf)
strcpy:3:char *strcpy(char *dest, const char *src)
vga_getpixel:3:int vga_getpixel(int x, int y)
mouse_setdefaulteventhandler:3:void mouse_setdefaulteventhandler(void)
putwchar:3:wint_t putwchar (wchar_t wc)
joystick_getbutton:3:char joystick_getbutton(int joydev, int b)
get_current_dir_name:3:char *get_current_dir_name(void)
random:3:long int random(void)
isdigit:3:int isdigit (int c)
dlopen:3:void *dlopen (const char *filename, int flag)
swapoff:2:int swapoff(const char *path)
div:3:div_t div(int numer, int denom)
strcspn:3:size_t strcspn(const char *s, const char *reject)
readline:3:readline (const char *prompt)
SDL_CreateCond:3:SDL_cond *SDL_CreateCond(void)
kill:2:int kill(pid_t pid, int sig)
SDL_JoystickName:3:const char *SDL_JoystickName(int index)
gmtime:3:struct tm *gmtime(const time_t *timep)
SDL_WM_IconifyWindow:3:int SDL_WM_IconifyWindow(void)
svc_run:3:svc_run()
llabs:3:long long int llabs(long long int j)
gl_write:3:void gl_write(int x, int y, char *s)
unlink:2:int unlink(const char *pathname)
swab:3:void swab(const void *from, void *to, size_t n)
authunix_create_default:3:authunix_create_default()
vga_setwritepage:3:void vga_setwritepage(int page)
getutline:3:struct utmp *getutline(struct utmp *ut)
fgets:3:char *fgets(char *s, int size, FILE *stream)
vga_setegacolor:3:void vga_setegacolor(int color)
SDL_CDPlay:3:int SDL_CDPlay(SDL_CD *cdrom, int start, int length)
authnone_create:3:authnone_create()
chmod:2:int chmod(const char *path, mode_t mode)
y0:3:double y0(double x)
syslog:2:int syslog(int type, char *bufp, int len)
inet_aton:3:int inet_aton(const char *cp, struct in_addr *inp)
strncasecmp:3:int strncasecmp(const char *s1, const char *s2, size_t n)
wcswidth:3:int wcswidth (const wchar_t *s, size_t n)
setpgid:2:int setpgid(pid_t pid, pid_t pgid)
mbtowc:3:int mbtowc (wchar_t *pwc, const char *s, size_t n)
pow:3:double pow(double x, double y)
vga_getcurrentchipset:3:int vga_getcurrentchipset(void)
endusershell:3:void endusershell(void)
recv:2:int recv(int s, void *buf, size_t len, int flags)
tmpnam:3:char *tmpnam(char *s)
getlogin:3:char * getlogin ( void )
strtok:3:char *strtok(char *s, const char *delim)
SDL_CondSignal:3:int SDL_CondSignal(SDL_cond *cond)
sprintf:3:int sprintf(char *str, const char *format, ...)
sched_get_priority_max:2:int sched_get_priority_max(int policy)
labs:3:long int labs(long int j)
ungetwc:3:wint_t ungetwc (wint_t wc, FILE *stream)
vga_setchipset:3:void vga_setchipset(int chipset)
vga_drawpixel:3:int vga_drawpixel(int x, int y)
vga_setmousesupport:3:void vga_setmousesupport(int stat)
vga_screenon:3:int vga_screenon(void)
joystick_getnumbuttons:3:char joystick_getnumbuttons(int joydev)
vga_accel:3:int vga_accel(unsigned operation, ...)
wcscmp:3:int wcscmp (const wchar_t *s1, const wchar_t *s2)
read_mib:3:struct tree *read_mib( char *filename )
getw:3:int getw(FILE *stream)
globfree:3:void globfree(glob_t *pglob)
SDL_GetVideoSurface:3:SDL_Surface *SDL_GetVideoSurface(void)
setregid:2:int setregid(gid_t rgid, gid_t egid)
SDL_GetModState:3:SDLMod SDL_GetModState(void)
SDL_GetThreadID:3:Uint32 SDL_GetThreadID(SDL_Thread *thread)
isalnum:3:int isalnum (int c)
bcmp:3:int bcmp(const void *s1, const void *s2, size_t n)
SDL_GL_GetProcAddress:3:void *SDL_GL_GetProcAddress(const char* proc)
_sysctl:2:int _sysctl(struct __sysctl_args *args)
strtol:3:long int strtol(const char *nptr, char **endptr, int base)
sysconf:3:long sysconf(int name)
setuid:2:int setuid(uid_t uid)
vga_blitwait:3:void vga_blitwait(void)
setlinebuf:3:void setlinebuf(FILE *stream)
svcraw_create:3:in the same  address  space;  see  svcraw_create()
getpwuid:3:struct passwd *getpwuid(uid_t uid)
signal:2:void (*signal(int signum, void (*sighandler)(int)))(int)
wctype:3:wctype_t wctype (const char *name)
mbsinit:3:int mbsinit (const mbstate_t *ps)
mkdir:2:int mkdir(const char *pathname, mode_t mode)
regex:3:regex(7)
wcwidth:3:int wcwidth (wint_t c)
nftw:3:int nftw (const char *dir,  int  (*fn)
longjmp:3:void longjmp(jmp_buf env, int val)
SDL_WasInit:3:Uint32 SDL_WasInit(Uint32 flags)
setresgid:2:int setresgid(gid_t rgid, gid_t egid, gid_t sgid)
SDL_SemPost:3:int SDL_SemPost(SDL_sem *sem)
tan:3:double tan(double x)
SDL_PauseAudio:3:void SDL_PauseAudio(int pause_on)
SDL_UnlockYUVOverlay:3:void SDL_UnlockYUVOverlay(SDL_Overlay *overlay)
snmp_sess_close:3:int snmp_sess_close ( void * opaque )
snmp_close:3:int snmp_close ( struct snmp_session *session )
pmap_unset:3:pmap_unset(prognum, versnum)
socketpair:2:int socketpair(int d, int type, int protocol, int sv[2])
ftw:3:int  ftw  (const  char  *dir,  int (*fn)
SDL_EnableKeyRepeat:3:int SDL_EnableKeyRepeat(int delay, int interval)
SDL_JoystickOpened:3:int SDL_JoystickOpened(int index)
munlock:2:int munlock(const void *addr, size_t len)
localeconv:3:struct lconv *localeconv(void)
copysign:3:double copysign(double x, double y)
readv:2:int readv(int fd, const struct iovec * vector, int count)
strdup:3:char *strdup(const char *s)
lockf:3:int lockf(int fd, int cmd, off_t len)
hcreate:3:int hcreate(unsigned nel)
svc_destroy:3:svc_destroy(xprt)
inet_makeaddr:3:struct in_addr inet_makeaddr(int net, int host)
ffs:3:int ffs(int i)
auth_destroy:3:auth_destroy(auth)
wcschr:3:wchar_t *wcschr (const wchar_t *wcs, wchar_t wc)
isgraph:3:int isgraph (int c)
tcsendbreak:3:int tcsendbreak ( int fd, int dration )
sigpause:2:int sigpause(int sigmask)
strrchr:3:char *strrchr(const char *s, int c)
getppid:2:pid_t getppid(void)
clnt_geterr:3:clnt_geterr(clnt, errp)
updwtmp:3:void updwtmp(const char *wtmp_file, const struct utmp *ut)
ioctl:2:int ioctl(int d, int request, ...)
SDL_WM_SetIcon:3:void SDL_WM_SetIcon(SDL_Surface *icon, Uint8 *mask)
init_module:2:int init_module(const char *name, struct module *image)
SDL_CDPause:3:int SDL_CDPause(SDL_CD *cdrom)
gl_setpalettecolor:3:void gl_setpalettecolor(int c, int r, int g, int b)
fclose:3:int fclose( FILE *stream)
iconv_open:3:iconv_t iconv_open (const char* tocode, const char* fromcode)
pause:2:int pause(void)
sched_getscheduler:2:int sched_getscheduler(pid_t pid)
rewinddir:3:void rewinddir(DIR *dir)
getservbyport:3:struct servent *getservbyport(int port, const char *proto)
atan:3:double atan(double x)
pam_open_session:3:int pam_open_session(pam_handle_t *pamh, int  flags)
vga_setcolor:3:void vga_setcolor(int color)
dup:2:int dup(int oldfd)
sin:3:double sin(double x)
svctcp_create:3:svctcp_create(sock, send_buf_size, rec_buf_size)
atoll:3:long long atoll(const char *nptr)
mbstowcs:3:size_t mbstowcs (wchar_t *dest, const char *src, size_t n)
snmp_sess_init:3:void snmp_sess_init ( struct snmp_session * )
expm1:3:double expm1 ( double x )
endhostent:3:void endhostent(void)
iswpunct:3:int iswpunct (wint_t wc)
wcpcpy:3:wchar_t *wcpcpy (wchar_t *dest, const wchar_t *src)
getdomainname:2:int getdomainname(char *name, size_t len)
wprintf:3:int wprintf (const wchar_t* format, ...)
log1p:3:double log1p ( double x )
putpwent:3:int putpwent(const struct passwd *p, FILE *stream)
cuserid:3:char * cuserid ( char *string )
insque:3:void insque(struct qelem *elem, struct qelem *prev)
gl_getpalette:3:void gl_getpalette(void *dp)
pivot_root:2:int pivot_root(const char *new_root, const char *put_old)
mouse_getcaps:3:int mouse_getcaps(struct MouseCaps *caps)
va_start:3:void va_start( va_list ap, last)
sysfs:2:int sysfs(int option, const char *fsname)
gl_setfont:3:void gl_setfont(int fw, int fh, void *fp)
wcsncat:3:wchar_t *wcsncat (wchar_t *dest, const wchar_t *src, size_t n)
isxdigit:3:int isxdigit (int c)
gl_compiledboxmasksize:3:int gl_compiledboxmasksize(int w, int h, void *sdp)
regcomp:3:int regcomp(regex_t *preg, const char *regex, int cflags)
basename:3:char *basename(char *path)
seed48:3:unsigned short int *seed48(unsignedshortint seed16v [3])
SDL_SemValue:3:Uint32 SDL_SemValue(SDL_sem *sem)
SDL_DestroySemaphore:3:void SDL_DestroySemaphore(SDL_sem *sem)
ftime:3:int ftime(struct timeb *tp)
wcsnlen:3:size_t wcsnlen (const wchar_t *s, size_t maxlen)
SDL_JoystickNumAxes:3:int SDL_JoystickNumAxes(SDL_Joystick *joystick)
SDL_ConvertAudio:3:int SDL_ConvertAudio(SDL_AudioCVT *cvt)
msgctl:2:int msgctl ( int msqid, int  cmd, struct msqid_ds *buf )
tcgetattr:3:int tcgetattr ( int fd, struct termios *termios_p )
finite:3:int finite(double value)
vga_setmode:3:int vga_setmode(int mode)
times:2:clock_t times(struct tms *buf)
fopen:3:FILE *fopen (const char *path, const char *mode)
pipe:2:int pipe(int filedes[2])
strxfrm:3:size_t strxfrm(char *dest, const char *src, size_t n)
tcdrain:3:int tcdrain ( int fd )
mblen:3:int mblen (const char *s, size_t n)
gl_setcontext:3:void gl_setcontext(GraphicsContext *gc)
memccpy:3:void *memccpy(void *dest, const void *src, int c, size_t n)
read:2:ssize_t read(int fd, void *buf, size_t count)
srandom:3:void srandom(unsigned int seed)
fnmatch:3:int fnmatch(const char *pattern, const char *string, int flags)
SDL_WarpMouse:3:void SDL_WarpMouse(Uint16 x, Uint16 y)
mlock:2:int mlock(const void *addr, size_t len)
SDL_mutexV:3:int SDL_mutexV(SDL_mutex *mutex)
svcerr_auth:3:svcerr_auth(xprt, why)
SDL_WaitEvent:3:int SDL_WaitEvent(SDL_Event *event)
fscanf:3:int fscanf( FILE *stream, const char *format, ...)
vga_puttextfont:3:void vga_puttextfont(void *font)
tanh:3:double tanh(double x)
fgetpos:3:int fgetpos( FILE *stream, fpos_t *pos)
gl_setpalettecolors:3:void gl_setpalettecolors(int s, int n, void *sp)
fputs:3:int fputs(const char *s, FILE *stream)
fgetc:3:int fgetc(FILE *stream)
vga_getmodenumber:3:int vga_getmodenumber(char *name)
shutdown:2:int shutdown(int s, int how)
siglongjmp:3:void siglongjmp(sigjmp_buf env, int val)
SDL_CondWait:3:int SDL_CondWait(SDL_cond *cond, SDL_mutex *mut)
SDL_CDName:3:const char *SDL_CDName(int drive)
gl_printf:3:int gl_printf(int x, int y, const char *fmt, ...)
SDL_GetAppState:3:Uint8 SDL_GetAppState(void)
towlower:3:wint_t towlower (wint_t wc)
ntohs:3:unsigned short int ntohs(unsigned short int netshort)
inet_addr:3:unsigned long int inet_addr(const char *cp)
svcerr_decode:3:svcerr_decode(xprt)
keyboard_init_return_fd:3:int keyboard_init_return_fd(void)
pam_setcred:3:int pam_setcred(pam_handle_t *pamh, int  flags)
fesetexceptflag:3:void fesetexceptflag(const fexcept_t *flagp, int excepts)
SDL_PumpEvents:3:void SDL_PumpEvents(void)
snmp_sess_timeout:3:void snmp_sess_timeout ( void * opaque )
gai_strerror:3:char *gai_strerror(int errcode)
mktime:3:time_t mktime(struct tm *timeptr)
endservent:3:void endservent(void)
gl_enableclipping:3:void gl_enableclipping(void)
SDL_SemWait:3:int SDL_SemWait(SDL_sem *sem)
clntudp_create:3:clntudp_create()
sigsetjmp:3:int sigsetjmp(sigjmp_buf env, int savesigs)
fgetwc:3:wint_t fgetwc (FILE* stream)
strncmp:3:int strncmp(const char *s1, const char *s2, size_t n)
getusershell:3:char *getusershell(void)
gl_line:3:void gl_line(int x1, int y1, int x2, int y2, int c)
sinh:3:double sinh(double x)
getgroups:2:int getgroups(int size, gid_t list[])
msync:2:int msync(const void *start, size_t length, int flags)
close:2:int close(int fd)
putenv:3:int putenv(const char *string)
siggetmask:2:int siggetmask(void)
memset:3:void *memset(void *s, int c, size_t n)
modf:3:double modf(double x, double *iptr)
sqrt:3:double sqrt(double x)
gl_setpixelrgb:3:void gl_setpixelrgb(int x, int y, int r, int g, int b)
endpwent:3:void endpwent(void)
SDL_CondBroadcast:3:int SDL_CondBroadcast(SDL_cond *cond)
tolower:3:int tolower (int c)
initstate:3:char *initstate(unsigned int seed, char *state, size_t n)
umount:2:int umount(const char *specialfile)
keyboard_getstate:3:char *keyboard_getstate(void)
symlink:2:int symlink(const char *oldpath, const char *newpath)
mouse_setyrange:3:void mouse_setyrange(int y1, int y2)
hsearch:3:ENTRY *hsearch(ENTRY item, ACTION action)
drem:3:double drem(double x, double y)
SDL_CDClose:3:void SDL_CDClose(SDL_CD *cdrom)
SDL_JoystickGetHat:3:Uint8 SDL_JoystickGetHat(SDL_Joystick *joystick, int hat)
SDL_LockSurface:3:int SDL_LockSurface(SDL_Surface *surface)
vga_getmousetype:3:int vga_getmousetype(void)
SDL_SemTryWait:3:int SDL_SemTryWait(SDL_sem *sem)
access:2:int access(const char *pathname, int mode)
setjmp:3:int setjmp(jmp_buf env)
res_init:3:int res_init(void)
hdestroy:3:void hdestroy(void)
svcerr_noproc:3:svcerr_noproc(xprt)
killpg:2:int killpg(int pgrp, int sig)
execv:3:int execv( const char *path, char *const argv[])
atol:3:long atol(const char *nptr)
svcudp_create:3:svcudp_create()
clnt_sperrno:3:clnt_sperrno(stat)
getitimer:2:int getitimer(int which, struct itimerval *value)
getrusage:2:int getrusage (int who, struct rusage *usage)
sched_getparam:2:int sched_getparam(pid_t pid, struct sched_param *p)
psignal:3:void psignal(int sig, const char *s)
SDL_JoystickIndex:3:int SDL_JoystickIndex(SDL_Joystick *joystick)
SDL_PushEvent:3:int SDL_PushEvent(SDL_Event *event)
SDL_DestroyCond:3:void SDL_DestroyCond(SDL_cond *cond)
vga_setpalvec:3:int vga_setpalvec(int start, int num, int *pal)
asin:3:double asin(double x)
execl:3:int execl( const char *path, const char *arg, ...)
svc_getcaller:3:svc_getcaller(xprt)
getrpcent:3:struct rpcent *getrpcent()
daemon:3:int daemon (int nochdir, int noclose)
inet_lnaof:3:unsigned long int inet_lnaof(struct in_addr in)
clnt_freeres:3:clnt_freeres(clnt, outproc, out)
SDL_Flip:3:int SDL_Flip(SDL_Surface *screen)
SDL_CDEject:3:int SDL_CDEject(SDL_CD *cdrom)
SDL_InitSubSystem:3:int SDL_InitSubSystem(Uint32 flags)
getwchar:3:wint_t getwchar (void)
SDL_FreeCursor:3:void SDL_FreeCursor(SDL_Cursor *cursor)
SDL_RemoveTimer:3:SDL_bool SDL_RemoveTimer(SDL_TimerID id)
setlocale:3:char *setlocale(int category, const char * locale)
SDL_GL_LoadLibrary:3:int SDL_GL_LoadLibrary(const char *path)
rindex:3:char *rindex(const char *s, int c)
ferror:3:int ferror( FILE *stream)
setdomainname:2:int setdomainname(const char *name, size_t len)
pmap_getmaps:3:pmap_getmaps(addr)
fstat:2:int fstat(int filedes, struct stat *buf)
popen:3:FILE *popen(const char *command, const char *type)
vga_setlogicalwidth:3:void vga_setlogicalwidth(int l)
fmod:3:double fmod(double x, double y)
fts_read:3:fts_read(FTS *ftsp)
iswctype:3:int iswctype (wint_t wc, wctype_t desc)
lgamma:3:double lgamma(double x)
on_exit:3:int on_exit(void (*function)(int , void *), void *arg)
gl_trigetcolorlookup:3:long gl_trigetcolorlookup(int i)
write:2:ssize_t write(int fd, const void *buf, size_t count)
stat:2:int stat(const char *file_name, struct stat *buf)
gl_getpixel:3:int gl_getpixel(int x, int y)
strncpy:3:char *strncpy(char *dest, const char *src, size_t n)
pclose:3:int pclose(FILE *stream)
getsid:2:pid_t getsid(pid_t pid)
memcpy:3:void *memcpy(void *dest, const void *src, size_t n)
send:2:int send(int s, const void *msg, size_t len, int flags)
clnt_pcreateerror:3:clnt_pcreateerror(s)
iswxdigit:3:int iswxdigit (wint_t wc)
keyboard_waitforupdate:3:void keyboard_waitforupdate(void)
SDL_Init:3:int SDL_Init(Uint32 flags)
endprotoent:3:void endprotoent(void)
fts_set:3:fts_set(FTS *ftsp, FTSENT *f, int options)
fchdir:2:int fchdir(int fd)
iswalpha:3:int iswalpha (wint_t wc)
gl_hline:3:void gl_hline(int x1, int y, int x2, int c)
opendir:3:DIR *opendir(const char *name)
wcsspn:3:wcsspn (const wchar_t *wcs, const wchar_t *accept)
mouse_close:3:void mouse_close(void)
gl_putbox:3:void gl_putbox(int x, int y, int w, int h, void *dp)
snmp_read:3:void snmp_read ( fd_set *fdset )
vga_hasmode:3:int vga_hasmode(int mode)
getnetbyname:3:struct netent *getnetbyname(const char *name)
j0:3:double j0(double x)
iswlower:3:int iswlower (wint_t wc)
svcerr_systemerr:3:svcerr_systemerr(xprt)
vga_setpalette:3:void vga_setpalette(int index, int r, int g, int b)
memmove:3:void *memmove(void *dest, const void *src, size_t n)
SDL_FreeYUVOverlay:3:void SDL_FreeYUVOverlay(SDL_Overlay *overlay)
read_objid:3:int read_objid( char *input, oid *output, int *out_len)
erand48:3:double erand48(unsigned short int xsubi[3])
alphasort:3:int alphasort(const struct dirent **a, const struct dirent **b)
svc_unregister:3:svc_unregister(prognum, versnum)
wmemcmp:3:int wmemcmp (const wchar_t *s1, const wchar_t *s2, size_t n)
iopl:2:int iopl(int level)
wcslen:3:size_t wcslen (const wchar_t *s)
gethostbyname:3:struct hostent *gethostbyname(const char *name)
confstr:3:size_t confstr(int name, char *buf, size_t len)
cbrt:3:double cbrt ( double x )
fputc:3:int fputc(int c, FILE *stream)
strcmp:3:int strcmp(const char *s1, const char *s2)
svc_sendreply:3:svc_sendreply(xprt, outproc, out)
utimes:2:int utimes(char *filename, struct timeval *tvp)
keyboard_translatekeys:3:void keyboard_translatekeys(int mask)
erf:3:double erf(double x)
getresuid:2:int getresuid(uid_t *ruid, uid_t *euid, uid_t *suid)
htonl:3:unsigned long int htonl(unsigned long int hostlong)
endutent:3:void endutent(void)
creat:2:int creat(const char *pathname, mode_t mode)
iswprint:3:int iswprint (wint_t wc)
vga_disabledriverreport:3:void vga_disabledriverreport(void)
add_mibdir:3:int add_mibdir( char *diname )
feof:3:int feof( FILE *stream)
pam_fail_delay:3:int pam_fail_delay(pam_handle_t *pamh, unsigned int usec)
vga_setlinearaddressing:3:int vga_setlinearaddressing(void)
atoi:3:int atoi(const char *nptr)
fegetenv:3:void fegetenv(fenv_t *envp)
vga_safety_fork:3:void vga_safety_fork(void (*shutdown_routine)(void))
fseek:3:int fseek( FILE *stream, long offset, int whence)
readdir:3:struct dirent *readdir(DIR *dir)
chroot:2:int chroot(const char *path)
getpid:2:pid_t getpid(void)
fputwc:3:wint_t fputwc (wchar_t wc, FILE* stream)
setstate:3:char *setstate(char *state)
setusershell:3:void setusershell(void)
fprintf:3:int fprintf(FILE *stream, const char *format, ...)
munmap:2:int munmap(void *start, size_t length)
mbrtowc:3:size_t mbrtowc (wchar_t *pwc, const char *s, size_t n, mbstate_t *ps)
joystick_init:3:int joystick_init(int joydev, __joystick_output jo)
wmemcpy:3:wchar_t *wmemcpy (wchar_t *dest, const wchar_t *src, size_t n)
keyboard_clearstate:3:void keyboard_clearstate(void)
lstat:2:int lstat(const char *file_name, struct stat *buf)
pam_authenticate:3:int pam_authenticate(pam_handle_t *pamh, int  flags)
toascii:3:int toascii (int c)
getpwnam:3:struct passwd *getpwnam(const char * name)
mount:2:int umount(const char *specialfile)
getrlimit:2:int getrlimit (int resource, struct rlimit *rlim)
tcsetpgrp:3:int tcsetpgrp ( int fd, pid_t pgrpid )
open:2:int open(const char *pathname, int flags)
callrpc:3:callrpc(host, prognum, versnum, procnum, inproc, in, outproc, out)
sched_yield:2:int sched_yield(void)
freeaddrinfo:3:void freeaddrinfo(struct addrinfo *res)
cfmakeraw:3:int cfmakeraw ( struct termios *termios_p )
vga_getcolors:3:int vga_getcolors(void)
SDL_SetEventFilter:3:void SDL_SetEventFilter(SDL_EventFilter filter)
snmp_timeout:3:void snmp_timeout ( void )
setkey:3:void setkey(const char *key)
openlog:3:void openlog( char *ident, int option, int  facility)
islower:3:int islower (int c)
mouse_getx:3:int mouse_getx(void)
joystick_setdefaulthandler:3:void joystick_setdefaulthandler(int joydev)
SDL_CDResume:3:int SDL_CDResume(SDL_CD *cdrom)
rint:3:double rint(double x)
vga_dumpregs:3:int vga_dumpregs(void)
vga_getcurrentmode:3:int vga_getcurrentmode(void)
fflush:3:int fflush(FILE *stream)
sigreturn:2:int sigreturn(unsigned long __unused)
SDL_DisplayFormatAlpha:3:SDL_Surface *SDL_DisplayFormatAlpha(SDL_Surface *surface)
fpathconf:3:long fpathconf(int filedes, int name)
perror:3:void perror(const char *s)
iswgraph:3:int iswgraph (wint_t wc)
pam_chauthtok:3:int pam_chauthtok(pam_handle_t *pamh, int  flags)
svc_register:3:Automatically done by svc_register()
SDL_JoystickEventState:3:int SDL_JoystickEventState(int state)
vga_runinbackground_version:3:int vga_runinbackground_version(void)
printf:3:int printf(const char *format, ...)
setgroups:2:int setgroups(size_t size, const gid_t *list)
getservent:3:struct servent *getservent(void)
abort:3:void abort(void)
fcntl:2:int fcntl(int fd, int cmd)
gl_fillbox:3:void gl_fillbox(int x, int y, int w, int h, int c)
ungetc:3:int ungetc(int c, FILE *stream)
vga_oktowrite:3:int vga_oktowrite(void)
wcpncpy:3:wchar_t *wcpncpy (wchar_t *dest, const wchar_t *src, size_t n)
vga_lastmodenumber:3:int vga_lastmodenumber(void)
SDL_ShowCursor:3:int SDL_ShowCursor(int toggle)
gethostid:2:long int gethostid(void)
SDL_GetMouseState:3:Uint8 SDL_GetMouseState(int *x, int *y)
mouse_seteventhandler:3:void mouse_seteventhandler(__mouse_handler handler)
vga_settextmoderegs:3:void vga_settextmoderegs(void *state)
SDL_VideoDriverName:3:char *SDL_VideoDriverName(char *namebuf, int maxlen)
gl_setdisplaystart:3:vga gl_setdisplaystart(int x, int y)
svcerr_noprog:3:svcerr_noprog(xprt)
strchr:3:char *strchr(const char *s, int c)
isinf:3:int isinf(double value)
getpwent:3:struct passwd *getpwent(void)
vscanf:3:int vscanf( const char *format, va_list ap)
clnttcp_create:3:clnttcp_create(), or clntudp_create()
clnt_broadcast:3:clnt_broadcast(prognum, versnum, procnum, inproc, in, outproc, out, eachresult)
putwc:3:wint_t fputwc (wchar_t wc, FILE* stream)
unsetenv:3:void unsetenv(const char *name)
clnt_control:3:are set, but can be modified using  clnt_control()
create_module:2:caddr_t create_module(const char *name, size_t size)
endmntent:3:int endmntent(FILE *filep)
vga_setflipchar:3:int vga_setflipchar(int c)
syslog:3:void syslog( int priority, char *format, ...)
SDL_GL_SetAttribute:3:int SDL_GL_SetAttribute(SDL_GLattr attr, int value)
wctrans:3:wctrans_t wctrans (const char *name)
svc_freeargs:3:svc_freeargs(xprt, inproc, in)
strncat:3:char *strncat(char *dest, const char *src, size_t n)
lcong48:3:void lcong48(unsigned short int param[7])
exit:3:void exit(int status)
exit:2:void _exit(int status)
mouse_setscale:3:void mouse_setscale(int s)
setreuid:2:int setreuid(uid_t ruid, uid_t euid)
strnlen:3:size_t strnlen (const char *s, size_t maxlen)
mrand48:3:long int mrand48(void)
wcspbrk:3:wchar_t *wcspbrk (const wchar_t *wcs, const wchar_t *accept)
imaxabs:3:intmax_t imaxabs(intmax_t j)
getpriority:2:int getpriority(int which, int who)
inet_ntoa:3:char *inet_ntoa(struct in_addr in)
lseek:2:off_t lseek(int fildes, off_t offset, int whence)
SDL_LoadBMP:3:SDL_Surface *SDL_LoadBMP(const char *file)
sysctl:2:int _sysctl(struct __sysctl_args *args)
getservbyname:3:struct servent *getservbyname(const char *name, const char *proto)
SDL_WaitThread:3:void SDL_WaitThread(SDL_Thread *thread, int *status)
atof:3:double atof(const char *nptr)
vga_unlockvc:3:void vga_unlockvc(void)
dlclose:3:int dlclose (void *handle)
read_module:3:struct tree *read_module( char *name )
endgrent:3:void endgrent(void)
SDL_JoystickClose:3:void SDL_JoystickClose(SDL_Joystick *joystick)
system:3:int system (const char * string)
rewind:3:void rewind( FILE *stream)
munlockall:2:int munlockall(void)
sethostent:3:void sethostent(int stayopen)
y1:3:double y1(double x)
asctime:3:char *asctime(const struct tm *timeptr)
atan2:3:double atan2(double y, double x)
pmap_getport:3:pmap_getport(addr, prognum, versnum, protocol)
sched_rr_get_interval:2:int sched_rr_get_interval(pid_t pid, struct timespec *tp)
getdents:2:int getdents(unsigned int fd, struct dirent *dirp, unsigned int count)
SDL_CreateMutex:3:SDL_mutex *SDL_CreateMutex(void)
iswblank:3:int iswblank (wint_t wc)
vga_getkey:3:int vga_getkey(void)
socket:2:int socket(int domain, int type, int protocol)
ceil:3:double ceil (double x)
wait:2:pid_t wait(int *status)
gl_getpalettecolor:3:void gl_getpalettecolor(int c, int *r, int *g, int *b)
strsignal:3:char *strsignal(int sig)
wmemset:3:wchar_t *wmemset (wchar_t *wcs, wchar_t wc, size_t n)
feraiseexcept:3:void feraiseexcept(int excepts)
SDL_PollEvent:3:int SDL_PollEvent(SDL_Event *event)
SDL_UnlockAudio:3:void SDL_UnlockAudio(void)
alarm:2:unsigned int alarm(unsigned int seconds)
joystick_close:3:void joystick_close(int joydev)
getprotoent:3:struct protoent *getprotoent(void)
isascii:3:int isascii (int c)
mprotect:2:int mprotect(const void *addr, size_t len, int prot)
SDL_CDOpen:3:SDL_CD *SDL_CDOpen(int drive)
fdopen:3:FILE *fdopen (int fildes, const char *mode)
SDL_JoystickOpen:3:SDL_Joystick *SDL_JoystickOpen(int index)
fchmod:2:int fchmod(int fildes, mode_t mode)
gl_getpalettecolors:3:void gl_getpalettecolors(int s, int n, void *dp)
print_mib:3:void print_mib( FILE *fp)
snmp_set_save_descriptions:3:void snmp_set_save_descriptions( int )
init_mib_internals:3:void init_mib_internals( void )
snmp_sess_open:3:void * snmp_sess_open ( struct snmp_session * )
fts_children:3:fts_children(FTS *ftsp, int options)
getwd:3:char *getwd(char *buf)
sigpending:2:int sigpending(sigset_t *set)
gethostname:2:int gethostname(char *name, size_t len)
SDL_SetCursor:3:void *SDL_SetCursor(SDL_Cursor *cursor)
gl_getcontext:3:void gl_getcontext(GraphicsContext *gc)
fegetround:3:int fegetround(void)
usleep:3:void usleep(unsigned long usec)
isatty:3:int isatty ( int desc )
getenv:3:char *getenv(const char *name)
dlerror:3:const char *dlerror(void)
ispunct:3:int ispunct (int c)
vga_screenoff:3:int vga_screenoff(void)
getprotobyname:3:struct protoent *getprotobyname(const char *name)
vga_drawscanline:3:int vga_drawscanline(int line , unsigned char *color)
regfree:3:void regfree(regex_t *preg)
registerrpc:3:registerrpc(prognum, versnum, procnum, procname, inproc, outproc)
getegid:2:gid_t getegid(void)
hypot:3:double hypot(double x, double y)
gl_setrgbpalette:3:void gl_setrgbpalette(void)
freehostent:3:void freehostent(struct hostent *ip)
setresuid:2:int setresuid(uid_t ruid, uid_t euid, uid_t suid)
SDL_KillThread:3:void SDL_KillThread(SDL_Thread *thread)
getprotobynumber:3:struct protoent *getprotobynumber(int proto)
fsetpos:3:int fsetpos( FILE *stream, fpos_t *pos)
tempnam:3:char *tempnam(const char *dir, const char *pfx)
pam_close_session:3:int pam_close_session(pam_handle_t *pamh, int  flags)
personality:2:int personality(unsigned long persona)
calloc:3:void *calloc(size_t nmemb, size_t size)
tcflow:3:int tcflow ( int fd, int action )
idle:2:int idle(void)
srand48:3:void srand48(long it seedval)
vhangup:2:int vhangup(void)
uselib:2:int uselib(const char *library)
dirname:3:char *dirname(char *path)
getutent:3:struct utmp *getutent(void)
acosh:3:double acosh(double x)
mouse_init:3:int mouse_init(char *dev, int type, int samplerate)
endnetent:3:void endnetent(void)
gl_getpixelrgb:3:void gl_getpixelrgb(int x, int y, int *r, int *g, int *b)
get_myaddress:3:get_myaddress(addr)
link:2:int link(const char *oldpath, const char *newpath)
pathconf:3:long fpathconf(int filedes, int name)
vga_setmodeX:3:void vga_setmodeX(void)
fgetgrent:3:struct group *fgetgrent(FILE *stream)
fwprintf:3:int fwprintf (FILE* stream, const wchar_t* format, ...)
wcstombs:3:size_t wcstombs (char *dest, const wchar_t *src, size_t n)
ftok:3:key_t ftok ( char *pathname, char proj )
SDL_JoystickNumButtons:3:int SDL_JoystickNumButtons(SDL_Joystick *joystick)
yn:3:double yn(int n, double x)
strfry:3:char *strfry(char *string)
iswalnum:3:int iswalnum (wint_t wc)
SDL_GetVideoInfo:3:SDL_VideoInfo *SDL_GetVideoInfo(void)
gl_setcontextheight:3:void gl_setcontextheight(int h)
vga_gettextfont:3:void vga_gettextfont(void *font)
setrlimit:2:int setrlimit (int resource, const struct rlimit *rlim)
vga_setpage:3:void vga_setpage(int page)
rmdir:2:int rmdir(const char *pathname)
vga_setreadpage:3:void vga_setreadpage(int page)
sethostid:2:int sethostid(long int hostid)
keyboard_init:3:int keyboard_init(void)
vga_getdefaultmode:3:int vga_getdefaultmode(void)
wcscat:3:wchar_t *wcscat (wchar_t *dest, const wchar_t *src)
setpwent:3:void setpwent(void)
catclose:3:void catclose(catalog)
SDL_ThreadID:3:Uint32 SDL_ThreadID(void)
mouse_update:3:int mouse_update(void)
SDL_mutexP:3:int SDL_mutexP(SDL_mutex *mutex)
chdir:2:int chdir(const char *path)
re_comp:3:char *re_comp(char *regex)
SDL_WM_GrabInput:3:SDL_GrabMode SDL_WM_GrabInput(SDL_GrabMode mode)
wctomb:3:int wctomb (char *s, wchar_t wc)
bdflush:2:int bdflush(int func, long *address)
shmctl:2:int shmctl(int shmid, int cmd, struct shmid_ds *buf)
mbrlen:3:size_t mbrlen (const char *s, size_t n, mbstate_t *ps)
execlp:3:int execlp( const char *file, const char *arg, ...)
reboot:2:int reboot (int magic, int magic2, int flag, void *arg)
ulimit:3:long ulimit(int cmd, long newlimit)
getrpcport:3:int getrpcport(host, prognum, versnum, proto)
seekdir:3:void seekdir(DIR *dir, off_t offset)
setservent:3:void setservent(int stayopen)
cos:3:double cos(double x)
vm86:2:int vm86(unsigned long fn, struct vm86plus_struct * v86)
wcscasecmp:3:int wcscasecmp (const wchar_t *s1, const wchar_t *s2)
towupper:3:wint_t towupper (wint_t wc)
readlink:2:int readlink(const char *path, char *buf, size_t bufsiz)
waitpid:2:pid_t waitpid(pid_t pid, int *status, int options)
flock:2:int flock(int fd, int operation)
gl_rgbcolor:3:int gl_rgbcolor(int r, int g, int b)
assert:3:void assert (int expression)
vga_waitretrace:3:void vga_waitretrace(void)
execvp:3:int execvp( const char file, char *const argv[])
vga_flip:3:int vga_flip(void)
gl_setcontextvgavirtual:3:int gl_setcontextvgavirtual(int mode)
strspn:3:size_t strspn(const char *s, const char *accept)
mouse_setposition:3:void mouse_setposition(int x, int y)
putchar:3:int putchar(int c)
ldexp:3:double ldexp(double x, int exp)
setsid:2:pid_t setsid(void)
keyboard_seteventhandler:3:void keyboard_seteventhandler(__keyboard_handler handler)
getgrnam:3:struct group *getgrnam(const char *name)
vga_getxdim:3:int vga_getxdim(void)
SDL_GetAudioStatus:3:SDL_audiostatusSDL_GetAudioStatus(void)
ntohl:3:unsigned long int ntohl(unsigned long int netlong)
remque:3:void remque(struct qelem *elem)
msgget:2:int msgget ( key_t key, int msgflg )
bzero:3:void bzero(void *s, size_t n)
vprintf:3:int vprintf(const char *fo_rmat, va_list ap)
SDL_Delay:3:void SDL_Delay(Uint32 ms)
joystick_update:3:int joystick_update(void)
getpw:3:int getpw(uid_t uid, char *buf)
cfgetispeed:3:speed_t cfgetispeed ( struct termios *termios_p )
SDL_GetKeyName:3:char *SDL_GetKeyName(SDLKey key)
SDL_FreeWAV:3:void SDL_FreeWAV(Uint8 *audio_buf)
sigemptyset:3:int sigemptyset(sigset_t *set)
shmdt:2:int shmdt ( const void *shmaddr)
clone:2:int  __clone(int (*fn) (void *arg)
vga_getpalvec:3:int vga_getpalvec(int start, int num, int *pal)
alloca:3:void *alloca( size_t size)
semget:2:int semget ( key_t key, int nsems, int semflg )
logwtmp:3:void logwtmp(const char *line, const char *name, const char *host)
vga_init:3:int vga_init(void)
joystick_getaxis:3:char joystick_getaxis(int joydev, int a)
killpg:3:int killpg(pid_t pidgrp, int signal)
setpriority:2:int setpriority(int which, int who, int prio)
getpass:3:char *getpass( const char * prompt )
setfsgid:2:int setfsgid(uid_t fsgid)
SDL_CloseAudio:3:void SDL_CloseAudio(void)
getgid:2:gid_t getgid(void)
getcwd:3:char *getcwd(char *buf, size_t size)
gettimeofday:2:int gettimeofday(struct timeval *tv, struct timezone *tz)
rename:2:int rename(const char *oldpath, const char *newpath)
gl_enablepageflipping:3:int gl_enablepageflipping(GraphicsContext *gc)
fsync:2:int fsync(int fd)
fstatfs:2:int fstatfs(int fd, struct statfs *buf)
fcloseall:3:int fcloseall(void)
siginterrupt:3:int siginterrupt(int sig, int flag)
memcmp:3:int memcmp(const void *s1, const void *s2, size_t n)
clnt_destroy:3:clnt_destroy(clnt)
puts:3:int fputs(const char *s, FILE *stream)
gcvt:3:char *gcvt(double number, size_t ndigit, char *buf)
getgrent:3:struct group *getgrent(void)
tzset:3:void tzset (void)
wcsstr:3:wchar_t *wcsstr (const wchar_t *haystack, const wchar_t *needle)
svc_getreqset:3:after calls to svc_getreqset()
strlen:3:size_t strlen(const char *s)
getmntent:3:struct mntent *getmntent(FILE *filep)
clnt_sperror:3:be   used.    Note:   unlike   clnt_sperror()
cosh:3:double cosh(double x)
nice:2:int nice(int inc)
stpcpy:3:char *stpcpy(char *dest, const char *src)
sethostname:2:int sethostname(const char *name, size_t len)
clnt_create:3:as  clnt_create()
authunix_create:3:authunix_create(host, uid, gid, len, aup_gids)
sigsuspend:2:int sigsuspend(const sigset_t *mask)
twalk:3:void twalk (const void *root, void (*action)
time:2:time_t time(time_t *t)
gl_trisetdrawpoint:3:void gl_trisetdrawpoint(void (setpixelfunc)
setegid:2:int setegid(gid_t egid)
SDL_LockYUVOverlay:3:int SDL_LockYUVOverlay(SDL_Overlay *overlay)
fgetws:3:wchar_t *fgetws (wchar_t *ws, int n, FILE *stream)
gl_writen:3:void gl_writen(int x, int y, int n ,char *s)
SDL_WM_ToggleFullScreen:3:int SDL_WM_ToggleFullScreen(SDL_Surface *surface)
sigblock:2:int sigblock(int mask)
isalpha:3:int isalpha (int c)
re_exec:3:int re_exec(char *string)
clearerr:3:void clearerr( FILE *stream)
mkfifo:3:int mkfifo ( const char *pathname, mode_t mode )
ctime:3:char *asctime(const struct tm *timeptr)
vga_getmodeinfo:3:vga_modeinfo *vga_getmodeinfo(int mode )
putc:3:int fputc(int c, FILE *stream)
malloc:3:void *malloc(size_t size)
pam_end:3:int pam_end(pam_handle_t *pamh, int pam_status)
feholdexcept:3:int feholdexcept(fenv_t *envp)
mouse_setxrange:3:void mouse_setxrange(int x1, int x2)
keyboard_close:3:void keyboard_close(void)
vsscanf:3:int vsscanf( const char *str, const char *format, va_listap)
ldiv:3:ldiv_t ldiv(long int numer, long int denom)
rpc:3:callrpc(host, prognum, versnum, procnum, inproc, in, outproc, out)
statfs:2:int statfs(const char *path, struct statfs *buf)
setenv:3:int setenv(const char *name, const char *value, int overwrite)
dlsym:3:void *dlsym(void *handle, char *symbol)
truncate:2:int truncate(const char *path, off_t length)
setup:2:int setup(void)
snmp_open:3:struct snmp_session * snmp_open ( struct snmp_session *)
SDL_GL_SwapBuffers:3:void SDL_GL_SwapBuffers(void )
memchr:3:void *memchr(const void *s, int c, size_t n)
gl_bcircle:3:void gl_bcircle(int x, int y, int r, int c, int fill)
dup2:2:int dup2(int oldfd, int newfd)
rresvport:3:rresvport(int *port)
mknod:2:int mknod(const char *pathname, mode_t mode, dev_t dev)
setprotoent:3:void setprotoent(int stayopen)
sigdelset:3:int sigdelset(sigset_t *set, int signum)
SDL_SetModState:3:void SDL_SetModState(SDLMod modstate)
joystick_getnumaxes:3:char joystick_getnumaxes(int joydev)
SDL_DisplayFormat:3:SDL_Surface *SDL_DisplayFormat(SDL_Surface *surface)
closedir:3:int closedir(DIR *dir)
SDL_GetRelativeMouseState:3:Uint8 SDL_GetRelativeMouseState(int *x, int *y)
iswupper:3:int iswupper (wint_t wc)
getwc:3:wint_t fgetwc (FILE* stream)
SDL_SaveBMP:3:int SDL_SaveBMP(SDL_Surface *surface, const char *file)
vga_getpalette:3:void vga_getpalette(int index, int *r, int *g, int *b)
setutent:3:void setutent(void)
gl_setwritemode:3:void gl_setwritemode(int m)
SDL_GetTicks:3:Uint32 SDL_GetTicks(void)
SDL_GL_GetAttribute:3:int SDL_GL_GetAttribute(SDLGLattr attr, int *value)
shutdown_mib:3:void shutdown_mib( void )
snmp_sess_session:3:struct snmp_session * snmp_sess_session ( void * )
memfrob:3:void *memfrob(void *s, size_t n)
_exit:2:void _exit(int status)
shmat:2:void *shmat ( int shmid, const void *shmaddr, int shmflg )
geteuid:2:uid_t geteuid(void)
toupper:3:int toupper (int c)
SDL_CDNumDrives:3:int SDL_CDNumDrives(void)
difftime:3:double difftime(time_t time1, time_t time0)
wcscspn:3:size_t wcscspn (const wchar_t *wcs, const wchar_t *reject)
getnetent:3:struct netent *getnetent(void)
gl_circle:3:void gl_circle(int x, int y, int r, int c)
clnt_perror:3:clnt_perror(clnt, s)
feclearexcept:3:void feclearexcept(int excepts)
gl_getbox:3:void gl_getbox(int x, int y, int w, int h, void *dp)
frexp:3:double frexp(double x, int *exp)
SDL_CreateThread:3:SDL_Thread  *SDL_CreateThread(int  (*fn)(void   *)
gl_setfontcolors:3:void gl_setfontcolors(int bg, int fg)
vga_getgraphmem:3:unsigned char *vga_getgraphmem(void)
inet_pton:3:int inet_pton(int af, const char *src, void *dst)
catopen:3:nl_catd catopen(name, flag)
ftell:3:long ftell( FILE *stream)
adjtimex:2:int adjtimex(struct timex *buf)
gl_colorfont:3:void gl_colorfont(int fw, int fh, int c, void *fp)
vga_drawline:3:int vga_drawline(int x1, int y1, int x2, int y2)
wcscpy:3:wchar_t *wcscpy (wchar_t *dest, const wchar_t *src)
strtok_r:3:char *strtok_r(char *s, const char *delim, char **ptrptr)
fesetenv:3:void fesetenv(const fenv_t *envp)
svc_getargs:3:service procedure using svc_getargs()
closelog:3:void closelog( void )
tcflush:3:int tcflush ( int fd, int queue_selector )
uname:2:int uname(struct utsname *buf)
clntudp_bufcreate:3:clntudp_bufcreate(addr, prognum, versnum, wait, sockp, sendsize, recosize)
utmpname:3:void utmpname(const char *file)
getpgrp:2:pid_t getpgrp(void)
bcopy:3:void bcopy (const void *src, void *dest, size_t n)
vga_getmodename:3:char *vga_getmodename(int mode)
feupdateenv:3:void feupdateenv(const fenv_t *envp)
strpbrk:3:char *strpbrk(const char *s, const char *accept)
telldir:3:off_t telldir(DIR *dir)
ttyname:3:char *ttyname ( int desc )
cfgetospeed:3:speed_t cfgetospeed ( struct termios *termios_p )
readdir:2:int readdir(unsigned int fd, struct dirent *dirp, unsigned int count)
wcstok:3:wchar_t *wcstok (wchar_t *wcs, const wchar_t *delim, wchar_t **ptr)
j1:3:double j1(double x)
print_description:3:void print_description( oid *objid, int objidlen)
getnetbyaddr:3:struct netent *getnetbyaddr(long net, int type)
gl_setcontextvga:3:int gl_setcontextvga(int mode)
cacheflush:2:int cacheflush(char *addr, int nbytes, int cache)
socketcall:2:int socketcall(int call, unsigned long *args)
vga_setrgbcolor:3:void vga_setrgbcolor(int r, int g, int b)
sigaddset:3:int sigaddset(sigset_t *set, int signum)
pututline:3:void pututline(struct utmp *ut)
SDL_GetEventFilter:3:SDL_EventFilter SDL_GetEventFilter(void)
snmp_sess_read:3:void snmp_sess_read ( void * opaque, fd_set *fdset )
vfork:2:pid_t vfork(void)
iswspace:3:int iswspace (wint_t wc)
gl_disableclipping:3:void gl_disableclipping(void)
raise:3:int raise (int sig)
abs:3:int abs(int j)
wmemmove:3:wchar_t *wmemmove (wchar_t *dest, const wchar_t *src, size_t n)
wcsncasecmp:3:int wcsncasecmp (const wchar_t *s1, const wchar_t *s2, size_t n)
vwprintf:3:int vwprintf (const wchar_t* fomat, va_list args)
recvmsg:2:int recvmsg(int s, struct msghdr *msg, int flags)
snmp_alarm:3:init_ssnmp_alarm(void)
wcrtomb:3:size_t wcrtomb (char *s, wchar_t wc, mbstate_t *ps)
atanh:3:double atanh(double x)
vga_guesstiming:3:int vga_guesstiming(int x, int y, int clue, int arg)
mkstemp:3:int mkstemp(char *template)
wcsdup:3:wchar_t *wcsdup (const wchar_t *s)
bindresvport:3:int bindresvport(sd, sin)
atoq:3:long long atoq(const char *nptr)
pmap_set:3:pmap_set(prognum, versnum, protocol, port)
SDL_EventState:3:Uint8 SDL_EventState(Uint8 type, int state)
setbuffer:3:void setbuffer(FILE *stream, char *buf, size_tsize)
setmntent:3:FILE *setmntent(const char *filename, const char *type)
brk:2:int brk(void *end_data_segment)
getpagesize:2:size_t getpagesize(void)
vga_clear:3:int vga_clear(void)
vga_getch:3:int vga_getch(void)
vga_runinbackground:3:void vga_runinbackground(int stat)
fwide:3:int fwide (FILE* stream, int mode)
vga_lockvc:3:void vga_lockvc(void)
remove:3:int remove(const char *pathname)
wctob:3:int wctob (wint_t c)
SDL_SemWaitTimeout:3:int SDL_SemWaitTimeout(SDL_sem *sem, Uint32 timeout)
keyboard_update:3:int keyboard_update(void)
log10:3:double log10(double x)
vga_gettextmoderegs:3:void vga_gettextmoderegs(void *state)
putw:3:int putw(int w, FILE *stream)
setgid:2:int setgid(gid_t gid)
tmpfile:3:FILE *tmpfile (void)
vga_ext_set:3:int vga_ext_set(unsigned what, ...)
SDL_JoystickNumBalls:3:int SDL_JoystickNumBalls(SDL_Joystick *joystick)
fchown:2:int fchown(int fd, uid_t owner, gid_t group)
getutid:3:struct utmp *getutid(struct utmp *ut)
setgrent:3:void setgrent(void)
wcsrchr:3:wchar_t *wcsrchr (const wchar_t *wcs, wchar_t wc)
drand48:3:double drand48(void)
svcudp_bufcreate:3:svcudp_bufcreate(sock, sendsize, recosize)
delete_module:2:int delete_module(const char *name)
isspace:3:int isspace (it c)
inet_netof:3:unsigned long int inet_netof(struct in_addr in)
vga_white:3:int vga_white(void)
btowc:3:wint_t btowc (int c)
SDL_DestroyMutex:3:void SDL_DestroyMutex(SDL_mutex *mutex)
listen:2:int listen(int s, int backlog)
va_end:3:void va_end( va_list ap)
SDL_UnlockSurface:3:void SDL_UnlockSurface(SDL_Surface *surface)
fputws:3:int fputws (const wchar_t *ws, FILE *stream)
gl_setpalette:3:void gl_setpalette(void *sp)
jn:3:double jn(int n, double x)
log:3:double log(double x)
sbrk:2:void *sbrk(ptrdiff_t increment)
strcat:3:char *strcat(char *dest, const char *src)
vga_getmonitortype:3:int vga_getmonitortype(void)
hasmntopt:3:char *hasmntopt(const struct mntent *mnt, const char opt)
SDL_GetKeyState:3:Uint8 *SDL_GetKeyState(int *numkeys)
sysinfo:2:int sysinfo(struct sysinfo *info)
svcfd_create:3:svcfd_create(fd, sendsize, recvsize)
isnan:3:int isnan(double value)
realloc:3:void *realloc(void *ptr, size_t size)
SDL_CDStatus:3:CDstatus SDL_CDStatus(SDL_CD *cdrom)
get_kernel_syms:2:int get_kernel_syms(struct kernel_sym *table)
strcasecmp:3:int strcasecmp(const char *s1, const char *s2)
iswcntrl:3:int iswcntrl (wint_t wc)
sync:2:int sync(void)
svcerr_progvers:3:svcerr_progvers(xprt)
fesetround:3:int fesetround(int rounding_mode)
strtod:3:double strtod(const char *nptr, char **endptr)
keyboard_setdefaulteventhandler:3:void keyboard_setdefaulteventhandler(void)
sched_get_priority_min:2:int sched_get_priority_min(int policy)
inet_network:3:unsigned long int inet_network(const char *cp)
gl_setcontextwidth:3:void gl_setcontextwidth(int w)
mktemp:3:char *mktemp(char *template)
strsep:3:char *strsep(char **stringp, const char *delim)
mouse_setwrap:3:void mouse_setwrap(int state)
isupper:3:int isupper (int c)
